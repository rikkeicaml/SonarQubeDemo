# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml
analyzer:
  exclude:
    - build/**
    - lib/l10n/**
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  plugins:
    - dart_code_metrics
dart_code_metrics: # https://dcm.dev/docs/individuals/rules/
  anti-patterns:
    - long-method:
        severity: warning
    - long-parameter-list:
        severity: warning
  metrics:
    cyclomatic-complexity: 20
    number-of-parameters: 12
    maximum-nesting-level: 5
  metrics-exclude:
    - test/**
  rules:
    - avoid-passing-async-when-sync-expected:
        exclude:
          - test/**
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unrelated-type-assertions
    - avoid-unused-parameters
    - avoid-nested-conditional-expressions
    - newline-before-return
    - no-boolean-literal-compare
    - prefer-trailing-comma
    - prefer-conditional-expressions
    - no-equal-then-else
    - avoid-unnecessary-conditionals
    - no-boolean-literal-compare
    - prefer-immediate-return
    - no-equal-then-else
    - prefer-first
    - prefer-iterable-of
    - prefer-commenting-analyzer-ignores
    - prefer-conditional-expressions:
        ignore-nested: true
    - prefer-correct-type-name:
        min-length: 3
        max-length: 40
    - member-ordering:
        order:
          - public-fields
          - private-fields
          - constructors
          - close-method
          - dispose-method
        widgets-order:
          - constructor
          - init-state-method
          - build-method
          - did-change-dependencies-method
          - did-update-widget-method
          - dispose-method
    - arguments-ordering:
        child-last: true
    - avoid-expanded-as-spacer
    - avoid-unnecessary-setstate
    - avoid-shrink-wrap-in-lists
    - prefer-correct-edge-insets-constructor
    - prefer-single-widget-per-file
    - prefer-using-list-view

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    - avoid_types_on_closure_parameters
    - avoid_void_async
    - await_only_futures
    - camel_case_types
    - cancel_subscriptions
    - close_sinks
    - constant_identifier_names
    - control_flow_in_finally
    - directives_ordering
    - empty_statements
    - hash_and_equals
    - implementation_imports
    - non_constant_identifier_names
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - test_types_in_equals
    - throw_in_finally
    - unnecessary_brace_in_string_interps
    - unnecessary_getters_setters
    - unnecessary_new
    - unnecessary_statements
    - prefer_const_constructors
    - always_use_package_imports
    - prefer_single_quotes  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
